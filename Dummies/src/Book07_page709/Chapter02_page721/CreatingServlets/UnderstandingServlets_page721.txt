Before you can understand what a servlet is and how it works, you need to understand the basics of how web servers work. Web servers use a networking protocol
called HTTP to send web pages to users. (HTTP stands for Hypertext Transfer Protocol, but that won’t be on the test.) With HTTP, a client computer uses a uniform resource locator, or URL, to request a document that’s located on the server
computer. HTTP uses a request/response model, which means that client computers
(web users) send request messages to HTTP servers, which in turn send response
messages back to the clients.

A basic HTTP interaction works something like this:

1.  Using a web-browser program running on a client computer, you specify the
    URL of a file that you want to access.
    In some cases, you actually type the URL of the address, but most of the time
    you click a link that specifies the URL.

2.  Your web browser sends an HTTP request message to the server computer
    indicated by the URL.
    The request includes the name of the file that you want to retrieve.

3.  The server computer receives the file request, retrieves the requested file, and
    sends the file back to you in the form of an HTTP response message.

4.  The web browser receives the file, interprets the HTML that it contains, and
    displays the result onscreen.

In other words, instead of sending the contents of a file, the server sends the
output generated by the servlet program. Typically, the servlet program generates
some HTML that’s displayed by the browser.

Servlets are designed to get their work done quickly and then end. Each time
a servlet runs, it processes one request from a browser, generates one page that’s
sent back to the browser, and then ends. The next time that user or any other user
requests the same servlet, the servlet runs again.