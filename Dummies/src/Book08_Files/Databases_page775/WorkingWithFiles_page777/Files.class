package Book08_Files.Databases_page775.WorkingWithFiles_page777;


import java.io.File;
import java.io.IOException;
import java.lang.ClassNotFoundException;

public class CreateFile {
	public static void main(String[] args) {
		try {
			File myObj = new File("filename.txt");
			myObj.createNewFile() {
				System.out.println("File created: " + myObj.getName());
			} else {
				System.out.println("File already exists.");
			}
		} catch (IOException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
	}
}
/*
You can rename a file by using the renameTo method. This method uses another
File object as a parameter that specifies the file you want to rename the current
file to. It returns a boolean value that indicates whether the file was renamed
successfully.
import java.io.File;import java.io.IOException;public class CreateFile {    public static void main(String[] args) {      try {        File myObj = new File("filename.txt");        if (myObj.createNewFile()) {          System.out.println("File created: " + myObj.getName());        } else {          System.out.println("File already exists.");        }      } catch (IOException e) {      System.out.println("An error occurred.");
      e.printStackTrace();}}}
The following statements change the name of a file named hits.log to
savedhits.log:
 */
/*
public class CreateFile {

	public static void main(String[] args) {
		try {
			File f = new File("hits.log");
		}
		System.out.println(File f = new File("hits.log"));
		/*
			if (f.renameTo(new File("savedhits.log")))

				System.out.println("File renamed.");
			else
				System.out.println("File not renamed.");

	}
}
*/
